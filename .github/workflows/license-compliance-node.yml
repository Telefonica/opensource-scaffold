name: "License Compliance - Node"
on:
  pull_request:

concurrency:  
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-node-license-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install Node.js dependencies
        run: pnpm install
      - name: Get report
        # cspell:disable-next-line
        uses: mathiasvr/command-output@v2.0.0
        continue-on-error: true
        id: report
        with:
          run: pnpm run check:license:compliance
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: previous-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: License Compliance check - Node
      - uses: actions/github-script@v7
        id: clean-output
        env:
          OUTPUT: ${{ steps.report.outputs.stdout }}
        with:
          script: |
            const lines = process.env.OUTPUT.split('\n');
            return lines.slice(4).filter((line) => !line.includes('ELIFECYCLE')).join('\n');
          result-encoding: string
      - name: Log
        run: echo "${{ steps.clean-output.outputs.result }}" && echo "${{ steps.previous-comment.outputs.comment-id }}"
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.previous-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.clean-output.outputs.result }}
          edit-mode: replace
      - if: ${{ steps.report.outputs.stderr }}
        run: echo "License Compliance check failed" && exit 1
        